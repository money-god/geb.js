{
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                { "internalType": "address", "name": "usr", "type": "address" },
                { "internalType": "uint256", "name": "ok", "type": "uint256" }
            ],
            "name": "allowHandler",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "safe",
                    "type": "uint256"
                },
                { "internalType": "address", "name": "usr", "type": "address" },
                { "internalType": "uint256", "name": "ok", "type": "uint256" }
            ],
            "name": "allowSAFE",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "safeEngine",
                    "type": "address"
                },
                { "internalType": "address", "name": "usr", "type": "address" }
            ],
            "name": "approveSAFEModification",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                { "internalType": "address", "name": "apt", "type": "address" },
                {
                    "internalType": "address",
                    "name": "safeHandler",
                    "type": "address"
                },
                { "internalType": "uint256", "name": "wad", "type": "uint256" }
            ],
            "name": "coinJoin_join",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "safeEngine",
                    "type": "address"
                },
                { "internalType": "address", "name": "usr", "type": "address" }
            ],
            "name": "denySAFEModification",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                { "internalType": "address", "name": "src", "type": "address" },
                { "internalType": "uint256", "name": "safe", "type": "uint256" }
            ],
            "name": "enterSystem",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                { "internalType": "address", "name": "apt", "type": "address" },
                { "internalType": "address", "name": "safe", "type": "address" }
            ],
            "name": "ethJoin_join",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                { "internalType": "address", "name": "apt", "type": "address" },
                {
                    "internalType": "address",
                    "name": "safe",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "ethJoin_join",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "ethJoin",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "safe",
                    "type": "uint256"
                },
                { "internalType": "uint256", "name": "wad", "type": "uint256" }
            ],
            "name": "exitETH",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "ethJoin",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "safe",
                    "type": "uint256"
                },
                { "internalType": "uint256", "name": "wad", "type": "uint256" }
            ],
            "name": "freeETH",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "taxCollector",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "coinJoin",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "safe",
                    "type": "uint256"
                },
                { "internalType": "uint256", "name": "wad", "type": "uint256" }
            ],
            "name": "generateDebt",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "ethJoin",
                    "type": "address"
                },
                { "internalType": "uint256", "name": "safe", "type": "uint256" }
            ],
            "name": "lockETH",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "taxCollector",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "ethJoin",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "coinJoin",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "safe",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "deltaWad",
                    "type": "uint256"
                }
            ],
            "name": "lockETHAndGenerateDebt",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "safe",
                    "type": "uint256"
                },
                {
                    "internalType": "int256",
                    "name": "deltaCollateral",
                    "type": "int256"
                },
                {
                    "internalType": "int256",
                    "name": "deltaDebt",
                    "type": "int256"
                }
            ],
            "name": "modifySAFECollateralization",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "safeSrc",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "safeDst",
                    "type": "uint256"
                }
            ],
            "name": "moveSAFE",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "taxCollector",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "ethJoin",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "coinJoin",
                    "type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "collateralType",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "deltaWad",
                    "type": "uint256"
                }
            ],
            "name": "openLockETHAndGenerateDebt",
            "outputs": [
                { "internalType": "uint256", "name": "safe", "type": "uint256" }
            ],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "collateralType",
                    "type": "bytes32"
                },
                { "internalType": "address", "name": "usr", "type": "address" }
            ],
            "name": "openSAFE",
            "outputs": [
                { "internalType": "uint256", "name": "safe", "type": "uint256" }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "safe",
                    "type": "uint256"
                },
                { "internalType": "address", "name": "dst", "type": "address" }
            ],
            "name": "quitSystem",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "coinJoin",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "safe",
                    "type": "uint256"
                },
                { "internalType": "uint256", "name": "wad", "type": "uint256" }
            ],
            "name": "repayDebt",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "ethJoin",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "coinJoin",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "safe",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "collateralWad",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "deltaWad",
                    "type": "uint256"
                }
            ],
            "name": "repayDebtAndFreeETH",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "collateral",
                    "type": "address"
                },
                { "internalType": "address", "name": "dst", "type": "address" },
                { "internalType": "uint256", "name": "amt", "type": "uint256" }
            ],
            "name": "transfer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "safe",
                    "type": "uint256"
                },
                { "internalType": "address", "name": "dst", "type": "address" },
                { "internalType": "uint256", "name": "wad", "type": "uint256" }
            ],
            "name": "transferCollateral",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "safe",
                    "type": "uint256"
                },
                { "internalType": "address", "name": "dst", "type": "address" },
                { "internalType": "uint256", "name": "rad", "type": "uint256" }
            ],
            "name": "transferInternalCoins",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "safe",
                    "type": "uint256"
                },
                { "internalType": "address", "name": "usr", "type": "address" }
            ],
            "name": "transferSAFEOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "proxyRegistry",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "manager",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "safe",
                    "type": "uint256"
                },
                { "internalType": "address", "name": "dst", "type": "address" }
            ],
            "name": "transferSAFEOwnershipToProxy",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "devdoc": {
        "methods": {
            "allowHandler(address,address,uint256)": {
                "params": {
                    "manager": "address - Safe Manager",
                    "usr": "address - usr address uint ok - 1 for allowed"
                }
            },
            "allowSAFE(address,uint256,address,uint256)": {
                "params": {
                    "manager": "address - Safe Manager",
                    "safe": "uint - Safe Id",
                    "usr": "address - usr address uint ok - 1 for allowed"
                }
            },
            "approveSAFEModification(address,address)": {
                "params": {
                    "safeEngine": "address",
                    "usr": "address - Address allowed to modify Safe"
                }
            },
            "denySAFEModification(address,address)": {
                "params": {
                    "safeEngine": "address",
                    "usr": "address - Address disallowed to modify Safe"
                }
            },
            "enterSystem(address,address,uint256)": {
                "params": {
                    "manager": "address - Safe Manager",
                    "safe": "uint - Safe Id",
                    "src": "- source handler"
                }
            },
            "ethJoin_join(address,address)": {
                "params": {
                    "apt": "address - Address of the adapter",
                    "safe": "uint - Safe Id"
                }
            },
            "ethJoin_join(address,address,uint256)": {
                "params": {
                    "apt": "address - Address of the adapter",
                    "safe": "uint - Safe Id",
                    "value": "uint - Value to join"
                }
            },
            "exitETH(address,address,uint256,uint256)": {
                "params": {
                    "ethJoin": "address",
                    "manager": "address - Safe Manager",
                    "safe": "uint - Safe Id",
                    "wad": "uint - Amount"
                }
            },
            "freeETH(address,address,uint256,uint256)": {
                "params": {
                    "ethJoin": "address",
                    "manager": "address - Safe Manager",
                    "safe": "uint - Safe Id",
                    "wad": "uint - Amount"
                }
            },
            "generateDebt(address,address,address,uint256,uint256)": {
                "params": {
                    "coinJoin": "address",
                    "manager": "address",
                    "safe": "uint - Safe Id",
                    "taxCollector": "address",
                    "wad": "uint - Amount"
                }
            },
            "lockETH(address,address,uint256)": {
                "params": {
                    "ethJoin": "address",
                    "manager": "address - Safe Manager",
                    "safe": "uint - Safe Id"
                }
            },
            "lockETHAndGenerateDebt(address,address,address,address,uint256,uint256)": {
                "params": {
                    "coinJoin": "address",
                    "deltaWad": "uint - Amount",
                    "ethJoin": "address",
                    "manager": "address",
                    "safe": "uint - Safe Id",
                    "taxCollector": "address"
                }
            },
            "modifySAFECollateralization(address,uint256,int256,int256)": {
                "params": {
                    "deltaCollateral": "- int",
                    "deltaDebt": "- int",
                    "manager": "address - Safe Manager",
                    "safe": "uint - Safe Id"
                }
            },
            "moveSAFE(address,uint256,uint256)": {
                "params": {
                    "manager": "address - Safe Manager",
                    "safeDst": "uint - Destination Safe Id",
                    "safeSrc": "uint - Source Safe Id"
                }
            },
            "openLockETHAndGenerateDebt(address,address,address,address,bytes32,uint256)": {
                "params": {
                    "coinJoin": "address",
                    "deltaWad": "uint - Amount",
                    "ethJoin": "address",
                    "manager": "address",
                    "taxCollector": "address"
                }
            },
            "openSAFE(address,bytes32,address)": {
                "params": {
                    "collateralType": "bytes32 - collateral type",
                    "manager": "address - Safe Manager",
                    "usr": "address - Owner of the safe"
                }
            },
            "quitSystem(address,uint256,address)": {
                "params": {
                    "dst": "- destination handler",
                    "manager": "address - Safe Manager",
                    "safe": "uint - Safe Id"
                }
            },
            "repayDebt(address,address,uint256,uint256)": {
                "params": {
                    "coinJoin": "address",
                    "manager": "address",
                    "safe": "uint - Safe Id",
                    "wad": "uint - Amount"
                }
            },
            "repayDebtAndFreeETH(address,address,address,uint256,uint256,uint256)": {
                "params": {
                    "coinJoin": "address",
                    "collateralWad": "uint - Amount of collateral to free",
                    "deltaWad": "uint - Amount of debt to repay",
                    "ethJoin": "address",
                    "manager": "address",
                    "safe": "uint - Safe Id"
                }
            },
            "transfer(address,address,uint256)": {
                "params": {
                    "amt": "address - Amount to transfer",
                    "collateral": "address - address of ERC20 collateral",
                    "dst": "address - Transfer destination"
                }
            },
            "transferCollateral(address,uint256,address,uint256)": {
                "params": {
                    "dst": "address - destination address uint wad - amount",
                    "manager": "address - Safe Manager",
                    "safe": "uint - Safe Id"
                }
            },
            "transferInternalCoins(address,uint256,address,uint256)": {
                "params": {
                    "dst": "address - destination address uint rad - amount",
                    "manager": "address - Safe Manager",
                    "safe": "uint - Safe Id"
                }
            },
            "transferSAFEOwnership(address,uint256,address)": {
                "params": {
                    "manager": "address - Safe Manager",
                    "safe": "uint - Safe Id",
                    "usr": "address - Owner of the safe"
                }
            },
            "transferSAFEOwnershipToProxy(address,address,uint256,address)": {
                "params": {
                    "dst": "address - Owner of the new proxy",
                    "manager": "address - Safe Manager",
                    "proxyRegistry": "address - Safe Manager",
                    "safe": "uint - Safe Id"
                }
            }
        }
    },
    "userdoc": {
        "methods": {
            "allowHandler(address,address,uint256)": {
                "notice": "Allow/disallow a usr address to quit to the sender handler"
            },
            "allowSAFE(address,uint256,address,uint256)": {
                "notice": "Allow/disallow a usr address to manage the safe"
            },
            "approveSAFEModification(address,address)": {
                "notice": "Approves an address to modify the Safe"
            },
            "denySAFEModification(address,address)": {
                "notice": "Denies an address to modify the Safe"
            },
            "enterSystem(address,address,uint256)": {
                "notice": "Import a position from src handler to the handler owned by safe"
            },
            "ethJoin_join(address,address)": {
                "notice": "Joins the system with the full msg.value"
            },
            "ethJoin_join(address,address,uint256)": {
                "notice": "Joins the system with the a specified value"
            },
            "exitETH(address,address,uint256,uint256)": {
                "notice": "Exits ETH (wad) from balance available in the handler"
            },
            "freeETH(address,address,uint256,uint256)": {
                "notice": "Free ETH (wad) from safe and sends it to msg.sender"
            },
            "generateDebt(address,address,address,uint256,uint256)": {
                "notice": "Generates debt and sends COIN amount to msg.sender"
            },
            "lockETH(address,address,uint256)": {
                "notice": "Lock ETH (msg.value) as collateral in safe"
            },
            "lockETHAndGenerateDebt(address,address,address,address,uint256,uint256)": {
                "notice": "Locks Eth, generates debt and sends COIN amount (deltaWad) to msg.sender"
            },
            "modifySAFECollateralization(address,uint256,int256,int256)": {
                "notice": "Modify a SAFE's collateralization ratio while keeping the generated COIN or collateral freed in the SAFE handler address."
            },
            "moveSAFE(address,uint256,uint256)": {
                "notice": "Move a position from safeSrc handler to the safeDst handler"
            },
            "openLockETHAndGenerateDebt(address,address,address,address,bytes32,uint256)": {
                "notice": "Opens Safe, locks Eth, generates debt and sends COIN amount (deltaWad) to msg.sender"
            },
            "openSAFE(address,bytes32,address)": {
                "notice": "Opens a brand new Safe"
            },
            "quitSystem(address,uint256,address)": {
                "notice": "Quit the system, migrating the safe (lockedCollateral, generatedDebt) to a different dst handler"
            },
            "repayDebt(address,address,uint256,uint256)": {
                "notice": "Repays debt"
            },
            "repayDebtAndFreeETH(address,address,address,uint256,uint256,uint256)": {
                "notice": "Repays debt and frees ETH (sends it to msg.sender)"
            },
            "transfer(address,address,uint256)": { "notice": "ERC20 transfer" },
            "transferCollateral(address,uint256,address,uint256)": {
                "notice": "Transfer wad amount of safe collateral from the safe address to a dst address."
            },
            "transferInternalCoins(address,uint256,address,uint256)": {
                "notice": "Transfer rad amount of COIN from the safe address to a dst address."
            },
            "transferSAFEOwnership(address,uint256,address)": {
                "notice": "Transfer the ownership of a proxy owned Safe"
            },
            "transferSAFEOwnershipToProxy(address,address,uint256,address)": {
                "notice": "Transfer the ownership to a new proxy owned by a different address"
            }
        }
    }
}
