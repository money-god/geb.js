/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { BaseContractAPI } from '@money-god/geb-contract-base'
import { MulticallRequest } from '@money-god/geb-contract-base'
import { BigNumber } from '@ethersproject/bignumber'

export class GetSafes extends BaseContractAPI {
    getSafesAsc(
        manager: string,
        guy: string
    ): Promise<{
        ids: BigNumber[]
        safes: string[]
        collateralTypes: string[]
    }>
    getSafesAsc(
        manager: string,
        guy: string,
        multicall: true
    ): MulticallRequest<{
        ids: BigNumber[]
        safes: string[]
        collateralTypes: string[]
    }>
    getSafesAsc(
        manager: string,
        guy: string,
        multicall?: true
    ):
        | Promise<{
              ids: BigNumber[]
              safes: string[]
              collateralTypes: string[]
          }>
        | MulticallRequest<{
              ids: BigNumber[]
              safes: string[]
              collateralTypes: string[]
          }> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"guy","type":"address"}],"name":"getSafesAsc","outputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"address[]","name":"safes","type":"address[]"},{"internalType":"bytes32[]","name":"collateralTypes","type":"bytes32[]"}],"stateMutability":"view","type":"function"}

        return this.ethCallOrMulticall(abi, [manager, guy], multicall)
    }

    getSafesDesc(
        manager: string,
        guy: string
    ): Promise<{
        ids: BigNumber[]
        safes: string[]
        collateralTypes: string[]
    }>
    getSafesDesc(
        manager: string,
        guy: string,
        multicall: true
    ): MulticallRequest<{
        ids: BigNumber[]
        safes: string[]
        collateralTypes: string[]
    }>
    getSafesDesc(
        manager: string,
        guy: string,
        multicall?: true
    ):
        | Promise<{
              ids: BigNumber[]
              safes: string[]
              collateralTypes: string[]
          }>
        | MulticallRequest<{
              ids: BigNumber[]
              safes: string[]
              collateralTypes: string[]
          }> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"guy","type":"address"}],"name":"getSafesDesc","outputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"address[]","name":"safes","type":"address[]"},{"internalType":"bytes32[]","name":"collateralTypes","type":"bytes32[]"}],"stateMutability":"view","type":"function"}

        return this.ethCallOrMulticall(abi, [manager, guy], multicall)
    }
}
